environment state object

'cMan' entity keyword
936 bytes long (0x3A8)

see CameraSystem.txt for related notes about the underlying/related systems

there seems to be more than one of these entities generated
but not sure when the extra ones are used?
pointer to entity array at (EXE+BFE80)

all mat4 locations known i think, but not sure what they're all for


FUNCTIONS

sub_451D60
452600
	deals with respawn camera after death
	non-global constants in here: respawn invuln timer, explosion zoom-out distance, ...
453E00
	seems to handle the whole stack of camera processing for inrace stuff


CONSTANTS

0x453F1B	jump table used for switching between camera mode behaviour in Unk_CMan_HandleRaceCamera_maybe_453E00
		no 0 case (function decrements the value before feeding it into the switch)
		space for 3 or 4 extra cases


OFFSETS

0x0000 Entity Header
0x0008
0x000C
0x0010
0x0014
0x0018
0x001C
0x0020	mat4	Camera Transformation Matrix;  constant (EXE+A9ADAC) points here
0x0060
0x0064
0x0068
0x006C	u32	Camera animation stage/phase;  ref in 452600
0x0070	f32	Camera animation timer
0x0074	ptr	Meta Cam index (see CameraSystem.txt)
0x0078	u32	Cam State index (see CameraSystem.txt)
0x007C	u32	Camera Mode
		cycle order: 1, 4, 5, 2
		1 = normal
		2 = far
		4 = engines
		5 = front
		6 = spline camera (similar to post-race autopilot)
		7 = pre-race camera
		8 = death camera
		9 = death camera end of animation handler?
		no other values have any logic attached
		seems to have a different set of logic for post-race cams?
		ref in 451D60, set from argument
0x0080	u32	Respawn camera mode;  respawn cam bug = because this not updated with F1-F4
		ref in 451EC0, written into 0x7C while checking if 1 or 2 to run 451D60
0x0084	LapComp struct
0x00B4	mat4	nearby spline point transform
0x00F4	ptr	address of 'Test' entity;  the thing being followed?
0x00F8
0x00FC
0x0100
0x0104
0x0108	mat4	camera focus?  also (EXE+A9ADB4) points here
0x0148	vec3	ref in CManCallback0x24_4543F0, HandleDeathCamera_452600
0x014C
0x0150
0x0154
0x0158
0x015C	vec3	?? vec3 in Deth event payload written here
		seems to be used as a staging vec3, later written to 0x108 Txyz in HandleDeathCamera_452600
0x0168	vec3	?? see HandleDeathCamera_452600
0x0174	vec3?	?? probable vec3 in Deth event payload written here
0x0180	vec3?	?? probable vec3 in Deth event payload written here
0x018C	vec3	?? seems to be used as a staging vec3, later written to 0x020 Txyz in HandleDeathCamera_452600
0x0198
0x019C
0x01A0
0x01A4
0x01A8
0x01AC
0x01B0
0x01B4	LapComp struct
0x01E4	mat4	lapcomp spline point transform
0x0224	mat4	?? staging mat4 for main transform? ref in 451D60, copied from 0x020
0x0264	mat4	?? staging mat4 for camera focus? only updated when cam1 or cam2 are on; ref in 451D60, copied from 0x108
0x02A4	ptr	ptr to swrModel_Behavior, see fn_451A80
0x02A8	u32	Fog toggles/flags (from LP)
		1<<03 ref in 453E00
0x02AC	u32	track visual flags; defaults to 0xFFFFFF00
0x02B0	f32?	camera zoom (from LP);  ref in 4533A0
0x02B4	f32?	maybe render depth (from LP)
0x02B8	f32	?? ref in HandleRaceCamera_maybe_453E00
0x02BC	[3]u32	Fog RGB
0x02C8	[3]u32	Fog RGB Target		
0x02D4 (f32)	Fog Distance;  also manages track visual segment load distance 
0x02D8 (f32)	Fog Distance Target
0x02DC (f32)	?? ref in fn_4538D0
0x02E0 (f32)	?? ref in fn_4538D0
0x02E4	u32	?? flags, terrain lighting related, see fn_451800
0x02E8	ENTITY_CMAN_LIGHT_SML
0x030C	ENTITY_CMAN_LIGHT_SML
0x0330	ENTITY_CMAN_LIGHT_LRG
0x0364	ENTITY_CMAN_LIGHT_LRG
0x0398	f32	?? 1.0 + frametime*2; see fn_451800
0x039C	f32	camera shake offset,  ref in 4542E0
0x03A0	f32	camera shake speed,  ref in 4542E0
0x03A4	f32	camera shake max offset,  ref in 4542E0
0x03A8 END

0x39C-0x3A4 notes
	GVG Shak command - 0.25 max offset, 8 speed 
	DD Shak command - 0.05 max offset, 4 speed
	both called from 47CE60

ENTITY_CMAN_LIGHT_SML (directional/global light?)
0x00	Vec3	?? lighting ambient color; probably 2x 0x24-long struct
0x0C	Vec3	unit vector pointing to 0x340 ('lighting vec3'); see fn_451160
0x18	Vec3	?? lighting color
0x24 END

ENTITY_CMAN_LIGHT_LRG (point light?)
0x00	u32	?? flags, terrain lighting related, see fn_451800
		probably 2x 0x34-long struct, second one gets copied into here
0x04	Vec3	lighting ambient color; transferred from model behavior struct, see fn_451800
0x10	Vec3	lighting vec3; copied from model behavior struct, see fn_451800
0x1C	Vec3	lighting light color; transferred from model behavior struct, see fn_451800
0x28	ptr	lighting unk model node?? copied from model behavior struct, see fn_451800
		code seems to treat as vec3, behavior struct def wrong?
0x2C	??	lighting unk; copied from model behavior struct, see fn_451800
0x30	??	lighting unk; copied from model behavior struct, see fn_451800
0x34 END


ENTITY_CMAN_SHAK struct
- pointer fed into cb24 magic/payload arg for 'Shak' event
0x00	u32	'Shak'
0x04	f32	max offset
0x08	f32	speed

ENTITY_CMAN_CBUT struct
- pointer fed into cb24 magic/payload arg for 'CBut' event
0x00	u32	'CBut'
0x04	ptr	Test entity, event skipped if ptr doesn't match cMan->pTestEntity

ENTITY_CMAN_DETH struct
- pointer fed into cb24 magic/payload arg for 'Deth' event
0x00	u32	'Deth'
0x04	ptr	Test entity, most of the event skipped if ptr doesn't match cMan->pTestEntity
0x08	BOOL?	if 1, event sets camera to 9 ('end of death anim handler'), else 8 (death cam)
0x0C	ptr	vec3
0x10	ptr	vec3?
0x14	ptr	vec3?

ENTITY_CMAN_SWEE struct
- pointer fed into cb24 magic/payload arg for 'Shak' event
0x00	u32	'Swee'
0x04	BOOL?	?? if this is on, seems to insta-end the sweep cam, instead of resetting it?