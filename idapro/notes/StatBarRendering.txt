researching stat bar rendering, but findings suggest these functions are generally used for drawing (potentially textured) quads
kind of turned into a quads research doc halfway through

GENERAL NOTES
- no special flags needed to get a sprite to render with an alpha channel, but sprites intended to be used as a color mask tend to have some flags set to change how the transparency looks
- lots of scene-specific functions that spam quad setup and adjustments, not all mentioned here; check functions that call fn_457ED0 or fn_4285D0 in ida or w/e to see them all
- not sure about the exact fn argument int types yet, but the bit sizes of them should be right


CONSTANTS

0xE9BA60  [400]QUAD	drawing queue; 0xE9EC60 END
0xE2AEC0  [7]f32	upgrade stat UI widths; i.e. "UI-formatted" stats
0xE2AF40  [7]f32?	upgrade stat UI widths for selected part in shop; used to calc stat bar subsegment
0x50C928  u32		stat bar drawing index? reset in HangCallback0x14
0x50C058  BOOL		hide all quads/sprites
0x4554CC  f32		stat bar height; static value not used for all cases, see draw stats fn asm
0x4B91B8  u32		initialized quads index; always at first uninitialized slot, max 400
0x4D7C68  [149]RESMAP	sprite ptr to id mappings
0x4D79F8  [149]BOOL	TGA markers for sprite ptr id mappings
			extra freeing steps will happen for marked sprites due to being heap-allocated
			see fn_417090
0xE9A280  [160]i16	?? list of quad ids
			see fn_42D380, seems every 2nd is used as id?
			seems lighting-related, setter fn_42D460 only used by lighting fns


FUNCTIONS

fn_4550D0
	- the function that draws the actual stat bar widget thing each frame, calling the below functions
	  to manipulate the quads each frame, among other things

drawing a bar seems to involve the following 4 functions:
- in the case of the stat bars, indexes start at 130 and are essentially static/assumed
- nothing else seems to be involved in drawing a bar, BUT these functions are also used for other things

fn_4285D0(i16,i32/bool) - swrQuad_SetVisible(index, visible)
	- set visible bit on/off in flags at given drawing index
	- special behaviour when arg1 = 0xFF37, 0xFF99 or 0xFF98
	  setting value at 50B700, 50B704 or 50B708 respectively
	- otherwise, sets flag 1<<5 (visible) in item at index arg1, using arg2
	- ALWAYS used with fn_428660, even when not drawing the stat bar

fn_428660(i16,i16,i16) - swrQuad_SetPosition(index, x, y)
	- set position of item at drawing index
	- special behaviour when arg1 = 0xFF37, writing values as f32 to 4B91BC and 4B91C0 instead of the following
	- otherwise, writes arg2, arg3 to 0x00, 0x02 of item at given index respectively

fn_4286F0(i16,f32,f32) - swrQuad_SetScale(index, x, h)
	- set scale of item at drawing index
	- the system seems to figure out on its own how big the sprite is to begin with
	- writes arg2, arg3 to 0x08, 0x0C of item at given index respectively

fn_428740(i16,u8,u8,u8,u8) - swrQuad_SetColor(index, r, g, b, a)
	- set color of item at drawing index
	- special behaviour when arg1 = 0xFF99 or 0xFF98, setting values to 50B704 or 50B708 respectively
	- otherwise, packs arg2-arg5 contiguously into 0x18 of item at given index

other functions, related more generally to quad/sprite drawing:

fn_4282F0(i16,i32) - swrQuad_InitializeQuad(index, sprite_ptr)
	- seems to be used to initialize struct used in above functions, at position arg1
	- will only set if arg1 < 400; meaning the quad drawing queue is limited to 400 quads?
	- sets [E9BA78+8*arg1] to arg2
	- does not set anything to [E9BA64+8*arg1], everything else gets a value
	- sets 0x4B91B8 to arg1+1 if smaller; quad queue size?

fn_4287E0(i16,u32) - swrQuad_SetFlags(index, flags)
	- used to set flags of item at given quad queue index

fn_428800(i16,u32) - swrQuad_UnsetFlags(index, flags)
	- used to unset flags of item at given quad queue index

fn_457ED0()
	- seems to be used to setup the default data for the quads on the character select

fn_4586E0(Hang:intptr)
	- seems to be a general setup fn for all quad data; also calls fn_457ED0
	- runs once on every scene transition in cantina

fn_4114D0(filename:[*:0]const u8, index:u32)
	- seems to be used to load a sprite from tga file and place it at a given index, returning
	  a ptr to the loaded data
	- not sure what unk2 is, but seems to correspond to the draw queue index in practice; 
	  i.e. InitQuad tends to be called with the same index as was used here

fn_446FB0(index:u32)
	- seems to be used to load a sprite from spriteblock from a given index, returning a ptr to the loaded data
	- just calls fn_446CA0 and forwards the output

fn_412E90(id:u32, filename:[*:0]const u8)
int __cdecl Unk_Quad_LoadAndMapSprite__412E90(int Id, const char *Filename)
	- tries to load a TGA with the given filename into given internal resource id, then return 1
	- if no filename given (nullptr), tries to load a sprite from spriteblock with the same index
	- if successful, map the resource to the given index and return 1
	- if the given index already has a resource attached, skip the whole thing and return 1
	- otherwise (i.e. no filename given OR loadable spriteblock index) return 0
	- filename given without extension or file path

fn_412F60
	- clears out quad array indices 251..399 with null pointers; not sure when/why it triggers

fn_428370
	- clears out all initialized quads, resetting the initialized quad index to 0

fn_435240
	- seems to do the title screen rendering; calls quad_setposition on logo text quads

void __cdecl Unk_Quad_MapSpriteToId__416FD0(SWR_SPRITE *pSprite, int Index, BOOL QueueFree)
	- seems to map pointer of loaded sprite data to internal resource index of some kind?
	- used to connect loaded TGA data to ids
	- arg3 unk, looks like BOOL, stored in separate array to mappings at 0x4D79F8

SWR_SPRITE *__cdecl Unk_Quad_GetMappedSprite__417010(int Id)

fn_414420
	- takes in ptr to sprite and BOOL
	- called by fn_40BBF0 in relation to some video settings
	- called by fn_40BC80 in relation to some audio settings

Unk_swrQuad_UpdateMouseCursor_408220

void Unk_swrQuad_ProcessQuads__4283B0(int a1)
	- renders all the quads, including but not limited to the quad queue
	- arg changes behaviour mainly to do with color (doesn't seem to affect the quad queue part tho)

void __cdecl Unk_swrQuad_DrawSprite__44F670(void *Sprite, i16 X, i16 Y, float ScaleX, float ScaleY, float Angle, __int16 a7, __int16 a8, int Flags, int R, int G, int B, int A)
	- seems to draw an individual sprite directly, without going through a Quad struct
	- DrawQuad calls this to do the actual drawing
	- calls fn_44F160 to do the actual drawing
	- flags
		@00
		@01
		@02
		@03	inactive (skips drawing)
		@04
		@05	no scaling (both scale params are 1); set on/off in function
		@06	hi-res mode; viewport size doubled for the duration of this sprite draw
		@07
		@08	?? increments sth +16 if @13 off, and again elsewhere if @14 on
		@09
		@10
		@11
		@12
		@13	flip horizontal
		@14	flip vertical
		@15
		@16
		@17	treat X,Y coords as center of sprite, rather than top-left
		@18
		@19
		@20
		@21
		@22	?? checked in conjunction with @23, skips running fn_44EFA0; see fn_44F160
			if this OR @23 are on, uses alternate draw fn path
			but if this bit is on, calls a null fn instead of the draw fn; maybe stripped debug draw fn?
		@23	rotate sprite; angle field ignored if off
			seems to rotate 'pages' individually, not the whole image collectively
			seems to cause some other things to be ignored, e.g. @06
			also causes half the sprite to not render, or draw pieces flipped?
			probably assumes the sprite is in a particular format
		@24	?? some kind of scaling; pairs with @26
		@25	?? some kind of scaling; pairs with @27
		@26	?? some kind of scaling; pairs with @24
		@27	?? some kind of scaling; pairs with @25
		@28	?? fn_44F160
		@29
		@30
		@31

void __cdecl Unk_swrQuad_DrawQuad__428030(SWR_QUAD *Quad, unk2, float PixelSizeX, float PixelSizeY)
	- the function called when actually drawing the items in the QUAD queue, see ProcessQuads
	- pixel size refers to how many real pixels covers a 'virtual' pixel
		- 320x240 or 640x480 depending on context, but you can put in anything when using manually
	- thought unk2 was COLOR_U8, but seems not to be the case exactly? colors do get copied in tho
		- seems to actually be flags, but the function reuses it to store color halfway through?

void Unk_swrQuad_LightingResetState__42D380()
void Unk_swrQuad_LightingSetId__42D460(int Index, int QuadId)
void Unk_swrQuad_LightingResetMemory__42D470()
void Unk_swrQuad_LightingSetSlots__42D410(int Slots)
[80]i8		Unk_swrQuad_LightingStateArr__E9A960
[160]i16	Unk_swrQuad_LightingIdArr__E9A280; maybe [80]i32?
i32		Unk_swrQuad_LightingSlots__4B9534


QUAD STRUCT

0x00	i16	x (assumes screen space of 320x240)
0x02	i16	y
0x04	i16	?? passed on to DrawSprite arg7; multiplied by PixelSizeX, ratio x? see fn_4286C0 and caller
0x06	i16	?? passed on to DrawSprite arg8; multiplied by PixelSizeY, ratio y? see fn_4286C0 and caller
0x08	f32	x scale (i.e. 1 = sprite width px in screen space)
0x0C	f32	y scale
0x10	f32	rotation angle
0x14	u32	flags
	@00	?? set on during quad init
	@01
	@02	flip horizontal; maps to DrawSprite flags @13
	@03	flip vertical (TGAs loaded are rendered flipped vertically by default?); maps to DrawSprite flags @14
	@04	?? maps to DrawSprite flags @15
	@05	visible
	@06	?? maps to DrawSprite flags @16
	@07	?? maps to both DrawSprite flags @24 and @25
	@08	?? maps to DrawSprite flags @23 ("rotate")
	@09	?? seen in fn_464630; maps to DrawSprite flags @01
	@10	?? maps to DrawSprite flags @00
	@11	?? seen in fn_464630, fn_408220
	@12	?? seen in fn_464630; maps to DrawSprite flags @17
	@13	enable world-space clipping; i.e. draw in 3d space, not in front of everything; maps to DrawSprite flags @04
	@14	?? on for lens flares, see fn_464010;
		maps to DrawSprite flags @22
	@15	?? 'sprite has transparency'? .. 
		leaving off has the effect of a black faded border on color mask sprites, as though the mask is being applied to the black part of the image rather than on the color you give it
		on for lens flares, see fn_464010; seen in fn_458250, fn_464630
		maps to DrawSprite flags @28
	@16	high-res mode (320x240->640x480)?  on for lens flares, see fn_464010; on for "STAR" title text, see fn_435240
		maps to DrawSprite flags @06
	@17
	@18
	@19	?? ref in fn_4584A0, used on track select icons (both flags and the plain one)
	@20
	@21
	@22
	@23
	@24
	@25
	@26
	@27
	@28
	@29
	@30
	@31
0x18	u32	RGBA
0x1C	ptr	pointer to sprite data used to draw the quad
0x20 END

RESOURCE MAP STRUCT
0x00	ptr	pointer to sprite data
0x04	int	resource id


QUAD STRUCT ARRAY INDEXES
different layout between inrace and cantina

000	in-race hud - LAP angled green line; see fn_4603F0
001	in-race hud - POS angled green line; see fn_4603F0
002	in-race hud - speedometer blue background, middle; see fn_4603F0
003	in-race hud - speedometer blue background, left side; see fn_4603F0
004	in-race hud - TIME curved green line; see fn_4603F0
005	?? ref in fn_4603F0; on when arg1 1<<0 (1)
006	?? ref in fn_4603F0; on when arg1 1<<0 (1)
007	in-race hud - double tall bar hud, left bar; also bar of tall heat meter accent hud; see fn_4603F0
008	in-race hud - double tall bar hud, right bar; see fn_4603F0
009	in-race hud - curved top of accent above heat meter; see fn_4603F0
010	in-race hud - speedometer blue background, right side; see fn_4603F0
011	in-race hud - LAP to TIME connecting green line; see fn_4603F0
012	in-race hud - TIME to POS connecting green line; see fn_4603F0
013	in-race hud - blue bar background at top; see fn_4603F0
014	in-race hud - N64 A Button icon
015	in-race hud - (P1?) speed meter/bar; P1/P2 order wrong? see fn_45FE70
016	in-race hud - (P1?) speed meter/bar
017	in-race hud - (P1?) speedo frame
018	in-race hud - (P1?) circle; speed dot?
019	in-race hud - (P2?) speed meter/bar
020	in-race hud - (P2?) speed meter/bar
021	in-race hud - (P2?) speedo frame
022	in-race hud - (P2?) circle; speed dot?
023	in-race hud - ?? something only configured on P2 setup logic? see also fn_4610F0
024	in-race hud - circle
025	in-race hud - minimap background; see fn_4603F0
026	in-race hud - ?? gradient; same sprite as top and minimap
027	in-race hud - (P1?) engine piece top 1
028	in-race hud - (P1?) engine piece mid 1
029	in-race hud - (P1?) engine piece bot 1
030	in-race hud - (P1?) engine piece top 2
031	in-race hud - (P1?) engine piece mid 2
032	in-race hud - (P1?) engine piece bot 2
033	in-race hud - (P1?) engine outline 1
034	in-race hud - (P1?) engine outline 2
035	in-race hud - (P2?) engine piece top 1
036	in-race hud - (P2?) engine piece mid 1
037	in-race hud - (P2?) engine piece bot 1
038	in-race hud - (P2?) engine piece top 2
039	in-race hud - (P2?) engine piece mid 2
040	in-race hud - (P2?) engine piece bot 2
041	in-race hud - (P2?) engine outline 1
042	in-race hud - (P2?) engine outline 2
043	in-race hud - pilot flags start
044	in-race hud - ..
045	in-race hud - ..
046	in-race hud - ..
047	in-race hud - ..
048	in-race hud - ..
049	in-race hud - ..
050	in-race hud - ..
051	in-race hud - ..
052	in-race hud - ..
053	in-race hud - ..
054	in-race hud - ..end? (game actually doesn't crash until >20 racers)
055
056
057
058
059
060
061
062
063	in-race - (flare) soft white circle
064	in-race - (flare) soft white circle (conditionally set in fn_464010)
065	in-race - flare ring
066	in-race - (flare) white circle
067	in-race - (flare) white circle
068	in-race - (flare) white circle
069	in-race - (flare) white circle
070	in-race - (flare) white circle
071	in-race - (flare) white circle
072	in-race - (flare) white circle
073	in-race - flare ring (73~80 conditionally set in fn_464010)
074	in-race - (flare) white circle
075	in-race - (flare) white circle
076	in-race - (flare) white circle
077	in-race - (flare) white circle; cantina - settings_btn_strch_sel.tga
078	in-race - (flare) white circle; cantina - podhangar_backdrop.tga
079	in-race - (flare) white circle; cantina - podhangar_backdrop2.tga
080	in-race - (flare) white circle; cantina - 'greyed splash'
081	in-race - (flare) white circle (81~140 same); cantina - logo 'episode I' text
082	cantina - logo 'star' text
083	cantina - logo 'wars' text
084	cantina - logo 'racer' text
085
086
087	?? ref in draw stat bar fn; indexes 87..97 all have fn_4287E0 called on them with 0x8000
088	stat bar bg tiling
089	..
090	..
091	..
092	..
093	..
094	.. last
095	?? ref in draw stat bar fn
096	?? ref in draw stat bar fn
097	?? ref in draw stat bar fn
098
099	cantina - track select - track flag/panel sprites (4x7=28; see fn_4584A0)
100	..
101	..
102	..
103	..
104	..
105	..
106	..
107	..
108	..
109	..
110	..
111	..
112	..
113	..
114	..
115	..
116	..
117	..
118	..
119	..
120	..
121	..
122	..
123	..
124	..
125	..
126	.. last
127
128
129
130	cantina - blank quads used for stat bars; 'start race' n64 settings menu bar 1
131	cantina - 'start race' n64 settings menu bar 2
132	cantina - ..
133	cantina - ..
134	cantina - ..
135	cantina - ..
136	cantina - ..
137	cantina - ..
138	cantina - ..
139	cantina - ..
140	cantina - ..
141	cantina - ..; in-race - sml flare fine (128), repeated 10 times. 141~160 can instead be white circle, see fn_464010
142	cantina - ..
143	cantina - .. last (range setup in fn_457ED0)
144	cantina - quads for part health bars, 2 per part; setup in fn_4287E0, drawn in fn_4557E0
145	cantina - ..
146	cantina - ..
147	cantina - ..
148	cantina - ..
149	cantina - ..
150	cantina - ..
151	cantina - ..; in-race - sml flare solid (127), repeated 10 times
152	cantina - ..
153	cantina - ..
154	cantina - ..
155	cantina - ..
156	cantina - ..
157	cantina - ..
158	cantina - .. could be the last blank quad in practice, observed sprite pointer changes for next 3?
159	cantina - ..
160	cantina - ..
161	cantina - .. last (according to range setup in fn_457ED0, same in fn_4584A0); in-race - countdown 1
162	in-race - countdown 2
163	in-race - countdown 3
164	in-race - 1st place flag
165	in-race - 2nd place flag
166	in-race - 3rd place flag
167
168
169
170	cantina - hor scrollbar right arrow
171	cantina - hor scrollbar 
172	cantina - hor scrollbar right arrow highlight
173	cantina - hor scroolbar left arrow
174	cantina - hor scrollbar 
175	cantina - hor scrollbar left arrow highlight
176	cantina - hor scrollbar 
177	cantina - ver scrollbar up arrow
178
179	cantina - ver scrollbar up arrow highlight
180	cantina - ver scrollbar down arrow
181
182	cantina - ver scrollbar down arrow highlight
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249	mouse cursor
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400 END